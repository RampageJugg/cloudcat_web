<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<context:annotation-config />
		
<!-- bean对应handler -->

	<!-- 静态资源解析
	包括 ：js、css、img、..
	 -->
	 <mvc:resources location="/skins/img/" mapping="/img/**"/>
	 <mvc:resources location="/skins/js/" mapping="/js/**"/>

	<!-- 对于实际开发中应该用组件扫描 -->
	<context:component-scan base-package="cn.itcast.ssm.controller"/>

<!-- 注解的映射器和适配器加载 开始-->
	<mvc:annotation-driven />
<!-- 注解的映射器和适配器加载 结束 -->

	<!-- 加载Velocity属性文件和资源路径.  -->
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/views/" />
		<property name="configLocation" value="classpath:velocity/velocity.properties" />
	</bean>

	<!-- Velocity视图解析器  -->
	<bean id="viewResolver"
		  class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="prefix" value="" />
		<property name="suffix" value=".html" />
		<!-- Whether we should cache views, once resolved -->
		<property name="cache" value="false" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<!-- 暴露Spring本身的宏  -->
		<property name="exposeSpringMacroHelpers" value="true" />

		<!-- 格式化日期 :$dateTool.format("yyyy-MM-dd",$!{})  -->
		<property name="dateToolAttribute" value="dateTool" />
		<!-- 格式化数字 :   -->
		<property name="numberToolAttribute" value="numberTool" />
		<property name="toolboxConfigLocation" value="/WEB-INF/classes/velocity/toolbox.xml" />
		<property name="order" value="0"></property>
	</bean>

<!--视图解析器  -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
		<property name="order" value="1"></property>
	</bean>

	<!-- 全局异常处理器
	只要实现HandlerExceptionResolver接口就是全局异常处理器
	 -->
	<bean class="com.bj.base.exception.CustomExceptionResolver"/>

	<!--拦截器 -->
	<mvc:interceptors>
		<!--登录认证拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/json/**"/><!-- 不拦截的url -->
			<mvc:exclude-mapping path="/cloudcat.action"/><!-- 官网不设置拦截 -->
			<mvc:exclude-mapping path="/register/**"/><!-- 注册不设置拦截 -->
			<bean class="com.bj.base.interceptor.LoginInterceptor"/>
		</mvc:interceptor>
	
		<!-- 可以定义其他的拦截器，多拦截顺序执行 -->
	
	</mvc:interceptors>
	

</beans>